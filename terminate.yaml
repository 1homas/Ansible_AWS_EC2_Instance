---
#
# Run: `ansible-playbook terminate.yaml`
#
- name: Terminate AWS EC2 Instances for Project "{{ project_name }}"
  hosts: localhost
  vars_prompt:
    - name: project_name
      prompt: Project Name
      default: AWS_EC2_Instance_Test
      private: no
  tasks:


  # - name: Get all EC2 Instances in Project "{{ project_name }}"
  #   community.aws.ec2_instance_info:    # get all by default
  #     filters:
  #       instance-state-name: running
  #       "tag:Project": "{{ project_name }}"
  #   register: instances

  # - name: Show instances
  #   ansible.builtin.debug: var=instances

  - name: Delete all EC2 instances in Project "{{ project_name }}"
    community.aws.ec2_instance:
      state: absent
      filters:
        instance-state-name: running
        "tag:Project": "{{ project_name }}"




  - name: Get all VPCs in Project "{{ project_name }}"
    amazon.aws.ec2_vpc_net_info:
      filters:
        "tag:Project": "{{ project_name }}"
    register: vpcs

  - name: Show vpcs
    ansible.builtin.debug: var=vpcs




  - name: Get All Subnets for Project "{{ project_name }}"
    amazon.aws.ec2_vpc_subnet_info:
      filters:
        "tag:Project": "{{ project_name }}"
    register: subnets

  # - name: Show subnets
  #   ansible.builtin.debug: var=subnets

  - name: Delete Subnets
    loop: '{{ subnets.subnets }}'
    amazon.aws.ec2_vpc_subnet:
      vpc_id: "{{ item.vpc_id }}"
      cidr: "{{ item.cidr_block }}"
      state: absent




  - name: Get All Route Tables for Project "{{ project_name }}"
    community.aws.ec2_vpc_route_table_info:
      filters:
        "tag:Project": "{{ project_name }}"
    register: rts

  - name: Show rts
    ansible.builtin.debug: var=rts

  - name: Delete Route Table
    loop: '{{ rts.route_tables }}'
    community.aws.ec2_vpc_route_table:
      route_table_id: "{{ item.id }}"
      lookup: id
      state: absent




  # - name: Get All Internet Gateways for Project "{{ project_name }}"
  #   community.aws.ec2_vpc_igw_info:
  #     convert_tags: yes
  #     filters:
  #       "tag:Project": "{{ project_name }}"
  #   register: igws

  # - name: Show igws
  #   ansible.builtin.debug: var=igws

  - name: Delete Internet Gateway
    loop: '{{ vpcs.vpcs }}'
    community.aws.ec2_vpc_igw:
      vpc_id: "{{ item.vpc_id }}"
      state: absent




  - name: Get all Security Groups in Project "{{ project_name }}"
    amazon.aws.ec2_group_info:
      filters:
        "tag:Project": "{{ project_name }}"
    register: sgs

  # - name: Show sgs
  #   ansible.builtin.debug: var=sgs

  - name: Delete Security Groups in VPC
    loop: "{{ sgs.security_groups }}"
    when: item.group_name != "default"
    amazon.aws.ec2_group:
      group_id: "{{ item.group_id }}"
      state: absent




  - name: Delete VPCs
    loop: "{{ vpcs.vpcs }}"
    amazon.aws.ec2_vpc_net:
      name: "{{ project_name }}_vpc"          # required
      cidr_block: "{{ item.cidr_block }}"     # required
      state: absent




  - name: "Delete {{ project_name }}.public_key"
    amazon.aws.ec2_key:
      name: "{{ project_name }}.public_key"
      state: absent

  - name: "Delete {{ playbook_dir }}/{{ project_name }}.private_key.pem"
    ansible.builtin.file:
      path: "{{ playbook_dir }}/{{ project_name }}.private_key.pem"
      state: absent


...
